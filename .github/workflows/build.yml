# This is a basic workflow to help you get started with Actions

name: build-vertio-automotive

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Create Build Environment
        run: |
          echo Install build tools
          sudo apt install gcc g++ make cmake
          echo Install virglrenderer
          sudo apt install libvirglrenderer1 libvirglrenderer-dev
          echo Install Weston compositor
          sudo apt install libvirglrenderer1 libvirglrenderer-dev \
                   libjpeg-dev libwebp-dev libsystemd-dev libpam-dev libva-dev freerdp2-dev \
                   libxcb-composite0-dev liblcms2-dev libcolord-dev libgstreamer1.0-dev \
                   libgstreamer-plugins-base1.0-dev libpipewire-0.2-dev libxml2-dev meson \
                   libxkbcommon-x11-dev libpixman-1-dev libinput-dev libdrm-dev wayland-protocols \
                   libcairo2-dev libpango1.0-dev libdbus-1-dev libgbm-dev libxcursor-dev
          echo Download source wayland weston lib
          wget https://github.com/wayland-project/weston/archive/8.0.93.tar.gz
          echo Exact file
          tar -xf 8.0.93.tar.gz
          ls -al
          cd weston-8.0.93/
          meson build/
          sudo ninja -C build/ install
          echo build weston
          cd ..
          echo Install mesa 18.2.0 with virgl support to a separate /usr/lib/mesa-virtio folder
          sudo apt install libelf-dev llvm libwayland-egl-backend-dev libxcb-glx0-dev libx11-xcb-dev \
                   libxcb-dri2-0-dev libxcb-dri3-dev libxcb-present-dev libxshmfence-dev \
                   libgbm-dev libsdl2-dev libgtk-3-dev libgles2-mesa-dev libpixman-1-dev \
                   libtool autoconf libdrm-dev python libinput-dev libwayland-egl-backend-dev \
                   glmark2-es2-wayland
          wget https://archive.mesa3d.org//mesa-18.2.0.tar.xz
          tar -xf mesa-18.2.0.tar.xz
          cd mesa-18.2.0/
          ##patch -p1 < ../remote-virtio-gpu/data/mesa/0001-glBufferData-Update-resource-backing-memory.patch
          ./configure --prefix=/usr/lib/mesa-virtio \
              --exec_prefix=/usr/lib/mesa-virtio \
              --libdir=/usr/lib/mesa-virtio \
              --includedir=/usr/include/mesa-virtio \
              --sysconfdir=/etc/mesa-virtio \
              --datadir=/usr/share/mesa-virtio \
              --with-dri-drivers=swrast \
              --with-gallium-drivers=swrast,virgl \
              --enable-dri3=yes \
              --with-platforms=drm,wayland,x11 \
              --disable-glx
          make -j4
          sudo make install
          cd ..
          
          
          
          
